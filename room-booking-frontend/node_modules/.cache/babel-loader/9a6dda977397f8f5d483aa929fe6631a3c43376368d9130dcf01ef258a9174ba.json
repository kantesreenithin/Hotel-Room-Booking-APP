{"ast":null,"code":"import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Link } from 'react-router-dom';\nimport \"./Auth.css\";\nconst LoginForm = () => {};\n_c = LoginForm;\nexport default LoginForm;\n\n// const {\n//   register,\n//   handleSubmit,\n//   formState: { errors },\n// } = useForm();\n// const formSubmit = (data) => {\n//   console.log(data);\n// };\n// return (\n//   <div className=\"sign-up\">\n//     <h1>Sign In</h1>\n//     <p>\n//       Didn't have an account{\" \"}\n//       <Link to=\"/register\" style={{textDecoration:\"none\"}}>\n//         Register Now\n//       </Link>\n//     </p>\n//     <form onSubmit={handleSubmit(formSubmit)}>\n//       <div className=\"input-group\">\n//         <label>Username</label>\n//         <input\n//           type=\"text\"\n//           name=\"username\"\n//           placeholder=\"Username\"\n//           {...register(\"username\", {\n//             required: true,\n//             validate: {\n//               matchPattern: (value) =>\n//                 /[A-Za-z]+/.test(\n//                   value\n//                 ),\n//             },\n\n//           })}\n//         />\n//         {errors.username?.type === \"required\" && (\n//           <p className=\"errorMsg\">username is required.</p>\n//         )}\n//         {errors.username?.type === \"matchPattern\" && (\n//           <p className=\"errorMsg\">\n//             username should start with only alphabetic characters\n//           </p>\n//         )}\n//         <label>Password</label>\n//         <input\n//           type=\"password\"\n//           name=\"password\"\n//           placeholder=\"Password\"\n//           {...register(\"password\", {\n//             required: true,\n//             validate: {\n//               checkLength: (value) => value.length >= 6,\n//               matchPattern: (value) =>\n//                 /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s)(?=.*[!@#$*])/.test(\n//                   value\n//                 ),\n//             },\n//           })}\n//         />\n//         {errors.password?.type === \"required\" && (\n//           <p className=\"errorMsg\">Password is required.</p>\n//         )}\n//         {errors.password?.type === \"checkLength\" && (\n//           <p className=\"errorMsg\">\n//             Password should be at-least 6 characters.\n//           </p>\n//         )}\n//         {errors.password?.type === \"matchPattern\" && (\n//           <p className=\"errorMsg\">\n//             Password should contain at least one uppercase letter, lowercase\n//             letter, digit, and special symbol.\n//           </p>\n//         )}\n//         <button type=\"submit\">Sign In</button>\n//       </div>\n//     </form>\n//   </div>\n// );\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useForm","Link","LoginForm","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/new project/room-booking-frontend/src/components/LoginForm.js"],"sourcesContent":["import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link } from 'react-router-dom'\r\nimport \"./Auth.css\";\r\n\r\nconst LoginForm = () => {\r\n \r\n};\r\n\r\nexport default LoginForm;\r\n\r\n\r\n// const {\r\n//   register,\r\n//   handleSubmit,\r\n//   formState: { errors },\r\n// } = useForm();\r\n// const formSubmit = (data) => {\r\n//   console.log(data);\r\n// };\r\n// return (\r\n//   <div className=\"sign-up\">\r\n//     <h1>Sign In</h1>\r\n//     <p>\r\n//       Didn't have an account{\" \"}\r\n//       <Link to=\"/register\" style={{textDecoration:\"none\"}}>\r\n//         Register Now\r\n//       </Link>\r\n//     </p>\r\n//     <form onSubmit={handleSubmit(formSubmit)}>\r\n//       <div className=\"input-group\">\r\n//         <label>Username</label>\r\n//         <input\r\n//           type=\"text\"\r\n//           name=\"username\"\r\n//           placeholder=\"Username\"\r\n//           {...register(\"username\", {\r\n//             required: true,\r\n//             validate: {\r\n//               matchPattern: (value) =>\r\n//                 /[A-Za-z]+/.test(\r\n//                   value\r\n//                 ),\r\n//             },\r\n            \r\n//           })}\r\n//         />\r\n//         {errors.username?.type === \"required\" && (\r\n//           <p className=\"errorMsg\">username is required.</p>\r\n//         )}\r\n//         {errors.username?.type === \"matchPattern\" && (\r\n//           <p className=\"errorMsg\">\r\n//             username should start with only alphabetic characters\r\n//           </p>\r\n//         )}\r\n//         <label>Password</label>\r\n//         <input\r\n//           type=\"password\"\r\n//           name=\"password\"\r\n//           placeholder=\"Password\"\r\n//           {...register(\"password\", {\r\n//             required: true,\r\n//             validate: {\r\n//               checkLength: (value) => value.length >= 6,\r\n//               matchPattern: (value) =>\r\n//                 /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s)(?=.*[!@#$*])/.test(\r\n//                   value\r\n//                 ),\r\n//             },\r\n//           })}\r\n//         />\r\n//         {errors.password?.type === \"required\" && (\r\n//           <p className=\"errorMsg\">Password is required.</p>\r\n//         )}\r\n//         {errors.password?.type === \"checkLength\" && (\r\n//           <p className=\"errorMsg\">\r\n//             Password should be at-least 6 characters.\r\n//           </p>\r\n//         )}\r\n//         {errors.password?.type === \"matchPattern\" && (\r\n//           <p className=\"errorMsg\">\r\n//             Password should contain at least one uppercase letter, lowercase\r\n//             letter, digit, and special symbol.\r\n//           </p>\r\n//         )}\r\n//         <button type=\"submit\">Sign In</button>\r\n//       </div>\r\n//     </form>\r\n//   </div>\r\n// );"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,YAAY;AAEnB,MAAMC,SAAS,GAAGA,CAAA,KAAM,CAExB,CAAC;AAACC,EAAA,GAFID,SAAS;AAIf,eAAeA,SAAS;;AAGxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}